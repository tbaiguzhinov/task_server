version: '3'

services:
  web:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
  
  db:
    container_name: db
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hello_django}"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-hello_django}
      - POSTGRES_USER=${POSTGRES_USER:-hello_django}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-hello_django}
  redis:
    container_name: redis
    hostname: redis
    image: redis:7-alpine
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 10


  worker:
    container_name: worker
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    command: "celery -A autodoc_task.celery_app worker -l INFO"
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    name: postgres_data
